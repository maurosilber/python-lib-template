[project]
name = "{{ project_name }}"
description = "{{ project_description }}"
version = "0.1.0"
authors = [{ name = "{{ your_name }}", email = "{{ your_email }}" }]
readme = { file = "README.md", content-type = "text/markdown" }
license = "{{ license }}"
classifiers = ["Programming Language :: Python :: 3"]
requires-python = ">={{ min_python_version }}"
dependencies = []

[project.urls]
homepage = "https://github.com/{{ github_username }}/{{ project_name }}"
issues = "https://github.com/{{ github_username }}/{{ project_name }}/issues"
changelog = "https://github.com/{{ github_username }}/{{ project_name }}/blob/main/CHANGELOG.md"
documentation = "https://{{ github_username }}.github.io/{{ project_name }}"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "--import-mode=importlib"
pythonpath = "."

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = ["I"]

[tool.pyright]
typeCheckingMode = "standard"
venv = "default"
venvPath = ".pixi/envs/"

[tool.pixi.project]
channels = ["https://repo.prefix.dev/conda-forge"]
platforms = {{ platforms }}

[tool.pixi.dependencies]
python = "=={{ min_python_version }}"

[tool.pixi.environments]
default = { features = ["test"] }
lint = { features = ["lint"], no-default-feature = true }
build = { features = ["build"], no-default-feature = true }
{%- if min_python_version_minor < max_python_version_minor %}
{%- for minor in range(min_python_version_minor, max_python_version_minor + 1) %}
test-py3{{ minor }} = ["test", "py3{{ minor }}"]
{%- endfor %}
{%- endif %}

[tool.pixi.feature.lint.dependencies]
pre-commit = "*"
pre-commit-hooks = "*"
taplo = "*"
ruff = "*"
mdformat = "*"
mdformat-ruff = "*"
pyright = "*"

[tool.pixi.feature.lint.tasks]
pre-commit-install = "pre-commit install"
lint = "pre-commit run"

[tool.pixi.feature.build.dependencies]
uv = "*"
python = "*" # required by mdremotifier

[tool.pixi.feature.build.pypi-dependencies]
mdremotifier = "*"

[tool.pixi.feature.build.tasks]
build = { cmd = "uv build", depends-on = ["remotify"] }
publish = "uv publish"
remotify = """mdremotifier -i README.md -o README.md
--url-prefix https://github.com/{{ github_username }}/{{ project_name }}/blob/main
--img-url-prefix https://raw.githubusercontent.com/{{ github_username }}/{{ project_name }}/refs/heads/main/
"""

[tool.pixi.feature.test.dependencies]
pytest = "*"

[tool.pixi.feature.test.pypi-dependencies]
pytest-readme = "*"

[tool.pixi.feature.test.tasks]
test = "pytest --doctest-modules"

{%- if min_python_version_minor < max_python_version_minor %}
{%- for minor in range(min_python_version_minor, max_python_version_minor + 1) %}

[tool.pixi.feature.py3{{ minor }}.dependencies]
python = "3.{{ minor }}.*"

{%- endfor %}
{%- endif %}
